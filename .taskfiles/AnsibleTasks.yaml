---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  ANSIBLE_KUBERNETES_DIR: "{{.ANSIBLE_DIR}}/kubernetes"
  ANSIBLE_WIREGUARD_DIR: "{{.ANSIBLE_DIR}}/wireguard"

tasks:

  prepare:
    desc: Prepare all the k8s nodes for running k3s
    dir: "{{.ANSIBLE_KUBERNETES_DIR}}"
    cmd: ansible-playbook -i inventory/hosts.yaml playbooks/cluster-prepare.yaml

  install:
    desc: Install Kubernetes on the nodes
    dir: "{{.ANSIBLE_KUBERNETES_DIR}}"
    cmd: ansible-playbook -i inventory/hosts.yaml playbooks/cluster-installation.yaml

  rollout-update:
    desc: Preform operating system updates and rollout restart the cluster
    dir: "{{.ANSIBLE_KUBERNETES_DIR}}"
    cmd: ansible-playbook -i inventory/hosts.yaml playbooks/cluster-rollout-update.yaml

  nuke:
    desc: Uninstall Kubernetes on the nodes
    dir: "{{.ANSIBLE_KUBERNETES_DIR}}"
    interactive: true
    cmd: ansible-playbook -i inventory/hosts.yaml playbooks/cluster-nuke.yaml

  reboot:
    desc: Reboot all the k8s nodes
    dir: "{{.ANSIBLE_KUBERNETES_DIR}}"
    cmd: ansible-playbook -i inventory/hosts.yaml playbooks/cluster-reboot.yaml

  poweroff:
    desc: Shutdown all the k8s nodes
    dir: "{{.ANSIBLE_KUBERNETES_DIR}}"
    cmd: ansible kubernetes -i inventory/hosts.yaml -a '/usr/bin/systemctl poweroff' --become

  list:
    desc: List all the hosts
    dir: "{{.ANSIBLE_KUBERNETES_DIR}}"
    cmd: ansible all -i inventory/hosts.yaml --list-hosts

  ping:
    desc: Ping all the hosts
    dir: "{{.ANSIBLE_KUBERNETES_DIR}}"
    cmd: ansible all -i inventory/hosts.yaml --one-line -m 'ping'

  uptime:
    desc: Uptime of all the hosts
    dir: "{{.ANSIBLE_KUBERNETES_DIR}}"
    cmd: ansible all -i inventory/hosts.yaml --one-line -a 'uptime'

  wireguard-install:
    desc: Install wireguard on all configured clients and servers
    dir: "{{.ANSIBLE_WIREGUARD_DIR}}"
    cmd: ansible-playbook -i inventory/hosts.yaml playbooks/wg-install.yaml
