---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  # renovate: datasource=github-releases depName=prometheus-operator/prometheus-operator
  PROMETHEUS_OPERATOR_VERSION: "v0.75.1"

tasks:

  verify:
    desc: Verify flux meets the prerequisites
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    cmd: flux --context {{.cluster}} check --pre
    requires:
      vars: ["cluster"]

  bootstrap:
    desc: Bootstrap Flux into a Kubernetes cluster
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    prompt: Bootstrap Flux into the '{{.cluster}}' cluster ... continue?
    cmds:
      # Install essential Prometheus Operator CRDs
      - kubectl --context {{.cluster}} apply --server-side --filename https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ .PROMETHEUS_OPERATOR_VERSION }}/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
      - kubectl --context {{.cluster}} apply --server-side --filename https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ .PROMETHEUS_OPERATOR_VERSION }}/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
      - kubectl --context {{.cluster}} apply --server-side --filename https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ .PROMETHEUS_OPERATOR_VERSION }}/example/prometheus-operator-crd/monitoring.coreos.com_scrapeconfigs.yaml
      - kubectl --context {{.cluster}} apply --server-side --filename https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ .PROMETHEUS_OPERATOR_VERSION }}/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
      # Install Flux
      - kubectl --context {{.cluster}} apply --kustomize {{.KUBERNETES_DIR}}/{{.cluster}}/bootstrap
      - sops --decrypt {{.KUBERNETES_DIR}}/{{.cluster}}/bootstrap/secrets/sops-age.sops.yaml | kubectl --context {{.cluster}} apply -f -
      - sops --decrypt {{.KUBERNETES_DIR}}/{{.cluster}}/bootstrap/secrets/github-deploy-key.sops.yaml | kubectl --context {{.cluster}} apply -f -
      - sops --decrypt {{.KUBERNETES_DIR}}/{{.cluster}}/flux/vars/cluster-secrets.sops.yaml | kubectl --context {{.cluster}} apply -f -
      - kubectl --context {{.cluster}} apply --kustomize {{.KUBERNETES_DIR}}/{{.cluster}}/flux/config
    preconditions:
      - test -f {{.ROOT_DIR}}/age.key
      - test -f {{.KUBERNETES_DIR}}/{{.cluster}}/bootstrap/secrets/sops-age.sops.yaml
      - test -f {{.KUBERNETES_DIR}}/{{.cluster}}/bootstrap/secrets/github-deploy-key.sops.yaml
      - test -f {{.KUBERNETES_DIR}}/{{.cluster}}/flux/vars/cluster-secrets.sops.yaml
      - sops --decrypt {{.KUBERNETES_DIR}}/{{.cluster}}/bootstrap/secrets/sops-age.sops.yaml
      - sops --decrypt {{.KUBERNETES_DIR}}/{{.cluster}}/bootstrap/secrets/github-deploy-key.sops.yaml
      - sops --decrypt {{.KUBERNETES_DIR}}/{{.cluster}}/flux/vars/cluster-secrets.sops.yaml
    requires:
      vars: ["cluster"]
    vars:
      SOPS_AGE_KEY_FILE: "{{.ROOT_DIR}}/age.key"

  reconcile:
    desc: Force update Flux to pull in changes from your Git repository
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    cmd: flux --context {{.cluster}} reconcile -n flux-system kustomization cluster --with-source
    requires:
      vars: ["cluster"]

  app:logs:
    desc: View logs for an app with matching 'app.kubernetes.io/name' label
    summary: |
      Args:
        cluster: Cluster to run command against (required)
        ns: Namespace where the app is
        app: App to view logs for
    cmds:
      - kubectl --context {{.cluster}} logs --namespace {{.ns}} --follow --selector app.kubernetes.io/name={{.app}}
    requires:
      vars: ["cluster", "ns", "app"]


  namespace:restart:
    desc: Restart all deployment, daemonsets and statefulsets within a namespace
    summary: |
      Args:
        cluster: Cluster to run command against (required)
        ns: Namespace to restart
    cmds:
      - kubectl --context {{.cluster}} rollout restart deployment --namespace {{.ns}}
      - kubectl --context {{.cluster}} rollout restart daemonset --namespace {{.ns}}
      - kubectl --context {{.cluster}} rollout restart statefulset --namespace {{.ns}}
    requires:
      vars: ["cluster"]
    vars:
      ns: '{{ or .ns (fail "Argument (ns) is required") }}'

  hr-restart:
    desc: Restart all failed Helm Releases
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    cmds:
      - kubectl --context {{.cluster}} get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -L1 bash -c 'flux --context {{.cluster}} suspend hr $0 -n $1'
      - kubectl --context {{.cluster}} get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -L1 bash -c 'flux --context {{.cluster}} resume hr $0 -n $1'
    requires:
      vars: ["cluster"]
