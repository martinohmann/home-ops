---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  kubectx:
    sh: kubectx --current
  kubens:
    sh: kubens --current

tasks:
  verify:
    desc: Verify flux meets the prerequisites
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    cmd: flux --context {{.cluster}} check --pre
    requires:
      vars: ["cluster"]

  bootstrap:
    desc: Bootstrap Flux into a Kubernetes cluster
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    prompt: Bootstrap Flux into the '{{.cluster}}' cluster ... continue?
    cmds:
      - bash {{.ROOT_DIR}}/.taskfiles/Cluster/resources/bootstrap.sh {{.cluster}} {{.CLI_ARGS}}
    preconditions:
      - test -f {{.KUBECONFIG}}
      - test -f {{.ROOT_DIR}}/.taskfiles/Cluster/resources/bootstrap.sh
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - which gum kubectl kustomize sops yq
    requires:
      vars: ["cluster"]

  app:logs:
    desc: View logs for an app with matching 'app.kubernetes.io/name' label
    summary: |
      Args:
        cluster: Cluster to run command against
        ns: Namespace where the app is
        app: App to view logs for
    cmds:
      - kubectl --context {{.cluster}} logs --namespace {{.ns}} --follow --selector app.kubernetes.io/name={{.app}}
    requires:
      vars: ["app"]
    vars:
      cluster: "{{.cluster | default .kubectx}}"
      ns: "{{.ns | default .kubens}}"

  namespace:restart:
    desc: Restart all deployment, daemonsets and statefulsets within a namespace
    summary: |
      Args:
        cluster: Cluster to run command against
        ns: Namespace to restart
    cmds:
      - kubectl --context {{.cluster}} rollout restart deployment --namespace {{.ns}}
      - kubectl --context {{.cluster}} rollout restart daemonset --namespace {{.ns}}
      - kubectl --context {{.cluster}} rollout restart statefulset --namespace {{.ns}}
    vars:
      cluster: "{{.cluster | default .kubectx}}"
      ns: "{{.ns | default .kubens}}"

  images:list:
    desc: List all container images used by currently running containers.
    summary: |
      Args:
        cluster: Cluster to run command against
    cmds:
      - >-
        kubectl get pods --context {{.cluster}} --all-namespaces -o jsonpath="{.items[*].spec['initContainers', 'containers'][*].image}" |
          tr -s '[[:space:]]' '\n' |
          sort |
          uniq -c
    vars:
      cluster: "{{.cluster | default .kubectx}}"
