---
name: "Publish Schemas"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"
  push:
    branches: ["main"]
    paths: [".github/workflows/publish-schemas.yaml"]

env:
  DEBCONF_NONINTERACTIVE_SEEN: "true"
  DEBIAN_FRONTEND: noninteractive
  APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE: DontWarn

jobs:
  publish-schemas:
    name: Publish Schemas
    runs-on: ["arc-runner-set-home-ops"]
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install kubectl
        uses: azure/setup-kubectl@776406bce94f63e41d621b960d78ee25c8b76ede # v4.0.1

      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: 3.13.x

      - name: Setup QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Generate container metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/kubernetes-schemas
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Install Python Dependencies
        run: pip install pyyaml

      - name: Setup sops
        uses: nhedger/setup-sops@187c90dbb4e28c3225263886266a5b92baa7e5a1 # v2.1.1

      - name: Run crd-extractor
        uses: martinohmann/.github/actions/sops-exec-env@main
        with:
          age-key: ${{ secrets.SOPS_AGE_KEY }}
          env-file: .github/secrets/publish-schemas.sops.env
          run: |
            export KUBECONFIG="$(mktemp /tmp/kubeconfig.XXXXX)"
            trap "rm -f $KUBECONFIG" EXIT
            echo -n "$KUBECONFIG_BASE64" | base64 -d > "$KUBECONFIG"
            curl -fsSL https://raw.githubusercontent.com/datreeio/CRDs-catalog/43e4407642d4c37683c88711f37caa6c9c20ca40/Utilities/crd-extractor.sh | bash

      - name: Write Dockerfile
        shell: bash
        run: |
          cat <<EOF > Dockerfile
          FROM docker.io/nginxinc/nginx-unprivileged:latest
          USER root
          RUN rm -rf /usr/share/nginx/html
          COPY --chown=nginx:nginx --chmod=755 . /usr/share/nginx/html
          USER nginx
          EOF

      - name: Build and publish container
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: /home/runner/.datree/crdSchemas
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: "${{ steps.meta.outputs.tags }}"
          labels: "${{ steps.meta.outputs.labels }}"
