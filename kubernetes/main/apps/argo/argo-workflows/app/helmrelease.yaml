---
# yaml-language-server: $schema=https://kubernetes-schemas.18b.haus/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: argo-workflows
spec:
  interval: 2h
  chart:
    spec:
      chart: argo-workflows
      version: 0.41.11
      sourceRef:
        kind: HelmRepository
        name: argo
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      revisionHistoryLimit: 3
      workflowDefaults:
        spec:
          serviceAccountName: argo-workflow
    server:
      revisionHistoryLimit: 3
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Automation
          gethomepage.dev/icon: argocd.png
          gethomepage.dev/name: Workflows
        hosts:
          - &host "workflows.18b.haus"
        tls:
          - hosts:
              - *host
      authModes:
        - sso
      sso:
        enabled: true
        issuer: https://identity.18b.haus/application/o/workflows/
        clientId:
          name: argo-server-sso
          key: client-id
        clientSecret:
          name: argo-server-sso
          key: client-secret
        redirectUrl: https://workflows.18b.haus/oauth2/callback
        scopes:
          - openid
          - profile
          - email
          - groups
    workflow:
      serviceAccount:
        create: true

    artifactRepositoryRef:
      artifact-repositories:
        annotations:
          workflows.argoproj.io/default-artifact-repository: argo-workflow-artifacts
        argo-workflow-artifacts:
          archiveLogs: true
          s3:
            bucket: argo-workflow-artifacts
            endpoint: s3.storage.18b.haus
            insecure: false
            accessKeySecret:
              name: argo-minio-credentials
              key: access-key-id
            secretKeySecret:
              name: argo-minio-credentials
              key: secret-access-key
