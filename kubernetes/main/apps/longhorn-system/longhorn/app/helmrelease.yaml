---
# yaml-language-server: $schema=https://kubernetes-schemas.18b.haus/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: longhorn
spec:
  interval: 2h
  chart:
    spec:
      chart: longhorn
      version: 1.6.1
      sourceRef:
        kind: HelmRepository
        name: longhorn
        namespace: flux-system
  dependsOn:
    - name: snapshot-controller
      namespace: volsync-system
  values:
    image:
      # Use upstream CSI images that fix "Lost connection to CSI driver,
      # exiting" error which causes frequent restarts of the CSI containers.
      #
      # See:
      # - https://github.com/kubernetes-csi/external-provisioner/issues/1099
      # - https://github.com/kubernetes-csi/csi-lib-utils/pull/153
      #
      # Longhorn does not ship these fixes as part of their images yet.
      csi:
        attacher:
          repository: registry.k8s.io/sig-storage/csi-attacher
          tag: v4.4.3
        provisioner:
          repository: registry.k8s.io/sig-storage/csi-provisioner
          tag: v3.6.3
        nodeDriverRegistrar:
          repository: registry.k8s.io/sig-storage/csi-node-driver-registrar
          tag: v2.9.3
        resizer:
          repository: registry.k8s.io/sig-storage/csi-resizer
          tag: v1.9.3
        snapshotter:
          repository: registry.k8s.io/sig-storage/csi-snapshotter
          tag: v6.3.3
        livenessProbe:
          repository: registry.k8s.io/sig-storage/livenessprobe
          tag: v2.12.0
    longhornManager:
      nodeSelector:
        node.longhorn.io/create-default-disk: "true"
    longhornDriver:
      nodeSelector:
        node.longhorn.io/create-default-disk: "true"
    longhornUI:
      nodeSelector:
        node.longhorn.io/create-default-disk: "true"
    persistence:
      defaultClass: false
      defaultFsType: ext4
      defaultClassReplicaCount: 2
      reclaimPolicy: Delete
      diskSelector: nvme

    defaultSettings:
      concurrentAutomaticEngineUpgradePerNodeLimit: 1
      createDefaultDiskLabeledNodes: true
      defaultDataLocality: best-effort
      defaultLonghornStaticStorageClass: longhorn
      defaultReplicaCount: 2
      deletingConfirmationFlag: false
      nodeDownPodDeletionPolicy: delete-both-statefulset-and-deployment-pod
      orphanAutoDeletion: true
      replicaAutoBalance: best-effort
      systemManagedComponentsNodeSelector: "node.longhorn.io/create-default-disk:true"

    pspEnable: false

    ingress:
      enabled: true
      ingressClassName: internal
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Storage
        gethomepage.dev/icon: longhorn.png
        gethomepage.dev/name: Longhorn
        gethomepage.dev/pod-selector: app.kubernetes.io/name=longhorn
        nginx.ingress.kubernetes.io/auth-signin: |-
          https://longhorn.18b.haus/outpost.goauthentik.io/start?rd=$escaped_request_uri
        nginx.ingress.kubernetes.io/auth-url: |-
          http://authentik-outpost-proxy.identity.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
        nginx.ingress.kubernetes.io/auth-response-headers: |-
          Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
        nginx.ingress.kubernetes.io/auth-snippet: |
          proxy_set_header X-Forwarded-Host $http_host;
      tls: true
      tlsSecret: ""  # Use the default certificate.
      host: "longhorn.18b.haus"
