---
- name: Prepare
  hosts: all
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 2 seconds...
      ansible.builtin.pause:
        seconds: 2

  tasks:
    - name: Packages
      block:
        - name: Packages | Switch to community apt repositories
          ansible.builtin.copy:
            src: files/sources.list.d/
            dest: /etc/apt/sources.list.d

        - name: Packages | Install packages
          ansible.builtin.apt:
            name:
              - cpufrequtils
              - curl
              - fio
              - htop
              - lm-sensors
              - openvswitch-switch
              - prometheus-node-exporter
              - vim
            install_recommends: false
            update_cache: true

        - name: Packages | Download smartctl_exporter
          ansible.builtin.unarchive:
            src: https://github.com/prometheus-community/smartctl_exporter/releases/download/{{ smartctl_exporter_version }}/smartctl_exporter-{{ smartctl_exporter_version[1:] }}.linux-amd64.tar.gz
            dest: /tmp
            remote_src: true

        - name: Packages | Install smartctl_exporter
          ansible.builtin.copy:
            src: /tmp/smartctl_exporter-{{ smartctl_exporter_version[1:] }}.linux-amd64/smartctl_exporter
            dest: /usr/local/bin
            mode: a+x
            remote_src: true
          when: not ansible_check_mode

    - name: Services
      block:
        - name: Services | Create smartctl-exporter systemd unit
          ansible.builtin.copy:
            src: files/smartctl-exporter.service
            dest: /etc/systemd/system/smartctl-exporter.service
            owner: root
            group: root
            mode: "0644"

        - name: Services | Start smartctl-exporter systemd unit
          ansible.builtin.systemd:
            name: smartctl-exporter.service
            enabled: true
            daemon_reload: true
            masked: false
            state: started

    - name: Cloud-init Configuration
      block:
        - name: Cloud-init Configuration | Ensure snippets directory
          ansible.builtin.file:
            path: /var/lib/vz/snippets
            state: directory
            owner: root
            group: root
            mode: 0775
            recurse: yes

        - name: Cloud-init Configuration | Install snippets
          ansible.builtin.copy:
            src: files/snippets/
            dest: /var/lib/vz/snippets

        - name: Cloud-init Configuration | Add create-cloud-init-template script
          ansible.builtin.copy:
            src: files/create-cloud-init-template
            dest: /usr/local/bin/create-cloud-init-template
            mode: '0755'

    - name: CPU Configuration
      block:
        - name: CPU Configuration | Add cpu-config script
          ansible.builtin.copy:
            src: files/cpu-config
            dest: /usr/local/sbin/cpu-config
            mode: '0755'

        - name: CPU Configuration | Create @reboot cronjob to set CPU config
          ansible.builtin.cron:
            name: Set CPU configuration
            special_time: reboot
            user: root
            job: "/usr/local/sbin/cpu-config set {{ cpu_config_set_args | join(' ') }}"
            cron_file: cpu-config-set

    - name: Network Configuration
      notify: Reboot
      block:
        - name: Network Configuration | Configure interfaces
          ansible.builtin.template:
            src: templates/etc/network/interfaces.j2
            dest: /etc/network/interfaces
            mode: preserve

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
        reboot_timeout: 3600
