#!/usr/bin/env bash

set -euo pipefail

info() { echo "❯ $*"; }
error() { echo "error: $*" >&2; }

usage() {
  cat <<EOS
usage: $(basename "$0") [command] [<options>]

Configures CPU scaling and power.

commands:
  set             Set CPU configuration.
  show            Show current configuration.
  help            Show this help and exit.

set command options:
  -g|--scaling-govenor [govenor]
                  Configures the CPU scaling govenor (default: $scaling_govenor).

  -p|--energy-performance-preference [preference]
                  Configures the CPU energy performance preference (default: $energy_performance_preference).

     --no-turbo   Disable Intel turbo boost.
     --turbo      Enable Intel turbo boost.

global options:
  -h|--help       Show this help and exit.
EOS
}

in_array() {
  local needle="$1"
  local fn="$2"

  for item in $($fn); do
    if [[ "$item" == "$needle" ]]; then
      return 0
    fi
  done

  return 1
}

available_scaling_govenors() {
  cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors
}

available_energy_performance_preferences() {
  cat /sys/devices/system/cpu/cpu0/cpufreq/energy_performance_available_preferences
}

show_config() {
  info "scaling_govenor=$scaling_govenor"
  info "energy_performance_preference=$energy_performance_preference"
  info "no_turbo=$no_turbo"
}

update_config() {
  info "setting scaling_govenor=$scaling_govenor"
  echo "$scaling_govenor" | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor > /dev/null

  info "setting no_turbo=$no_turbo"
  echo "$no_turbo" | tee /sys/devices/system/cpu/intel_pstate/no_turbo > /dev/null

  info "setting energy_performance_preference=$energy_performance_preference"
  echo "$energy_performance_preference" | tee /sys/devices/system/cpu/cpu*/cpufreq/energy_performance_preference > /dev/null
}

require_opt_arg() {
  if [ $# -lt 2 ] || [[ "$2" == -* ]]; then
    error "$1 requires an argument"
    exit 1
  fi
}

main() {
  if [ $# -lt 1 ]; then
    usage
    exit 1
  fi

  cmd="$1"; shift

  case "$cmd" in
    -h|--help|help)
      usage ;;
    show)
      show_config ;;
    set)
      while [ $# -gt 0 ]; do
        case "$1" in
          -h|--help)
            usage; exit ;;
          -g|--scaling-govenor)
            require_opt_arg "$@"
            scaling_govenor="$2"; shift ;;
          -p|--energy-performance-preference)
            require_opt_arg "$@"
            energy_performance_preference="$2"; shift ;;
          --no-turbo)
            no_turbo=1 ;;
          --turbo)
            no_turbo=0 ;;
          -*)
            error "unrecognized option $1"
            exit 1 ;;
          *)
            error "unexpected argument '$1'"
            exit 1 ;;
        esac
        shift
      done

      if ! in_array "$scaling_govenor" available_scaling_govenors; then
        error "unsupported scaling govenor '$scaling_govenor', expected one of: $(available_scaling_govenors)"
        exit 1
      fi

      if ! in_array "$energy_performance_preference" available_energy_performance_preferences; then
        error "unsupported energy performance preference '$energy_performance_preference'," \
          "expected one of: $(available_energy_performance_preferences)"
        exit 1
      fi

      update_config ;;
    *)
      error "unsupported subcommand $cmd"
      exit 1 ;;
  esac

}

cmd=
energy_performance_preference="$(cat /sys/devices/system/cpu/cpu0/cpufreq/energy_performance_preference)"
no_turbo=$(cat /sys/devices/system/cpu/intel_pstate/no_turbo)
scaling_govenor="$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor)"

main "$@"
